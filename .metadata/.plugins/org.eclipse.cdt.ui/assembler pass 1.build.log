13:39:05 **** Incremental Build of configuration Debug for project assembler pass 1 ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\assembler\\parser.o" "..\\src\\assembler\\parser.cpp" 
..\src\assembler\parser.cpp: In member function 'std::vector<std::__cxx11::basic_string<char> > parser::get_groups(std::__cxx11::smatch)':
..\src\assembler\parser.cpp:182:20: warning: comparison of integer expressions of different signedness: 'int' and 'std::__cxx11::match_results<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >::size_type' {aka 'long long unsigned int'} [-Wsign-compare]
  for (int i = 1; i < m.size(); i++) {
                  ~~^~~~~~~~~~
..\src\assembler\parser.cpp: In member function 'void parser::add(std::__cxx11::string, info)':
..\src\assembler\parser.cpp:294:27: error: no matching function for call to 'std::map<std::__cxx11::basic_string<char>, info>::insert(std::__cxx11::string&, info&)'
  this->optab.insert(name,i);
                           ^
In file included from c:\mingw\include\c++\8.2.0\map:61,
                 from ..\src\assembler\parser.h:5,
                 from ..\src\assembler\parser.cpp:1:
c:\mingw\include\c++\8.2.0\bits\stl_map.h:801:7: note: candidate: 'std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >; typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator = std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::__cxx11::basic_string<char>, info>]'
       insert(const value_type& __x)
       ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:801:7: note:   candidate expects 1 argument, 2 provided
c:\mingw\include\c++\8.2.0\bits\stl_map.h:808:7: note: candidate: 'std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >; typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator = std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::__cxx11::basic_string<char>, info>]'
       insert(value_type&& __x)
       ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:808:7: note:   candidate expects 1 argument, 2 provided
c:\mingw\include\c++\8.2.0\bits\stl_map.h:815:2: note: candidate: 'template<class _Pair, class> std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::insert(_Pair&&) [with _Pair = _Pair; <template-parameter-2-2> = <template-parameter-1-2>; _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >]'
  insert(_Pair&& __x)
  ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:815:2: note:   template argument deduction/substitution failed:
..\src\assembler\parser.cpp:294:27: note:   candidate expects 1 argument, 2 provided
  this->optab.insert(name,i);
                           ^
In file included from c:\mingw\include\c++\8.2.0\map:61,
                 from ..\src\assembler\parser.h:5,
                 from ..\src\assembler\parser.cpp:1:
c:\mingw\include\c++\8.2.0\bits\stl_map.h:829:7: note: candidate: 'void std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::initializer_list<std::pair<const _Key, _Tp> >) [with _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >]'
       insert(std::initializer_list<value_type> __list)
       ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:829:7: note:   candidate expects 1 argument, 2 provided
c:\mingw\include\c++\8.2.0\bits\stl_map.h:859:7: note: candidate: 'std::map<_Key, _Tp, _Compare, _Alloc>::iterator std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::__cxx11::basic_string<char>, info>]'
       insert(const_iterator __position, const value_type& __x)
       ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:859:7: note:   no known conversion for argument 1 from 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} to 'std::map<std::__cxx11::basic_string<char>, info>::const_iterator' {aka 'std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >'}
c:\mingw\include\c++\8.2.0\bits\stl_map.h:869:7: note: candidate: 'std::map<_Key, _Tp, _Compare, _Alloc>::iterator std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, std::map<_Key, _Tp, _Compare, _Alloc>::value_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::__cxx11::basic_string<char>, info>]'
       insert(const_iterator __position, value_type&& __x)
       ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:869:7: note:   no known conversion for argument 1 from 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'} to 'std::map<std::__cxx11::basic_string<char>, info>::const_iterator' {aka 'std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >'}
c:\mingw\include\c++\8.2.0\bits\stl_map.h:876:2: note: candidate: 'template<class _Pair, class> std::map<_Key, _Tp, _Compare, _Alloc>::iterator std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, _Pair&&) [with _Pair = _Pair; <template-parameter-2-2> = <template-parameter-1-2>; _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >]'
  insert(const_iterator __position, _Pair&& __x)
  ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:876:2: note:   template argument deduction/substitution failed:
..\src\assembler\parser.cpp:294:21: note:   cannot convert 'name' (type 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'}) to type 'std::map<std::__cxx11::basic_string<char>, info>::const_iterator' {aka 'std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, info> >'}
  this->optab.insert(name,i);
                     ^~~~
In file included from c:\mingw\include\c++\8.2.0\map:61,
                 from ..\src\assembler\parser.h:5,
                 from ..\src\assembler\parser.cpp:1:
c:\mingw\include\c++\8.2.0\bits\stl_map.h:892:2: note: candidate: 'template<class _InputIterator> void std::map<_Key, _Tp, _Compare, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = std::__cxx11::basic_string<char>; _Tp = info; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, info> >]'
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
c:\mingw\include\c++\8.2.0\bits\stl_map.h:892:2: note:   template argument deduction/substitution failed:
..\src\assembler\parser.cpp:294:27: note:   deduced conflicting types for parameter '_InputIterator' ('std::__cxx11::basic_string<char>' and 'info')
  this->optab.insert(name,i);
                           ^

13:39:08 Build Failed. 1 errors, 1 warnings. (took 2s.863ms)

