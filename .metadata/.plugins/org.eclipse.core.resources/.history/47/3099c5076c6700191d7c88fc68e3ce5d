#include <iostream>
#include "assembler/assembler.h"
#include "assembler/parser.h"
#include "assembler/mnemonicinstruction.h"
#include <sstream>
#include <vector>
#include <iomanip>
#include <stdio.h>
using namespace std;
regex r("^\\s*pass1\\s+([\\s\\S]+)$");
void run(){
	while(true){
		string s;
		getline(cin,s);
		cout<<s<<endl;
		smatch sm;
		if(regex_match(s,sm,r)){
			cout<<"file :"<<sm[1].str()<<endl;
			cout<<pass1(sm[1].str())<<endl;
		}
	}
}
int main() {
//	parser p;
//	mnemonic_instruction m;
//	m = p.parse("rsub");
//	cout<<m.getMnemonic()<<"  m"<<endl;
//	regex instruction("^\\s*(?:(\\S+)?\\s+)?"
//		"(\\s*[+]?[\\w]+)\\s*"
//		"(?:\\s+([#@,\\w\\s]+)?\\s*)?"
//		"(?:\\s+(\\.[\\s\\S]+)?)?$");
//	string s = "adsdnasd adkajdh .sdfkjskd ";
//	smatch m;
//	regex_match(s, m, instruction);
//	cout << m.size() << endl;
//	cout << m.str() << endl;
//	vector<string> v = get_groups(m);
//	cout << v.size()<<endl<<v[0] << endl;
	run();
	string s="X",s1="X";
	 int c = s.compare(s1);

	if(s.compare("sdsd")) cout<<c<<endl;
	cout <<std::left<<setw(20)<<"Artist" <<setw(20)<< "Title" <<setw(20)<< "Price"<<endl;
	cout <<std::left<<setw(20)<<"Merle"<<setw(20)<<"Blusssnnnnnnnn\n nnnnnvvvc" <<setw(20)<< 12<<endl;
	return 0;
}


